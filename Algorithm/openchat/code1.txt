import java.util.ArrayList;
import java.util.HashMap;
import java.util.StringTokenizer;

class Solution {
    public String[] solution(String[] record) {
		StringTokenizer tokenizer = null;
		String cmd, id, nick = null;
		HashMap<String, String> idMap = new HashMap<>();
		for (String r : record) {
			tokenizer = new StringTokenizer(r, " ");
			cmd = tokenizer.nextToken();
			if(!cmd.equals("Leave")) {
				id = tokenizer.nextToken();
				nick = tokenizer.nextToken();
				idMap.put(id, nick);
			}
		}		
		ArrayList<String> answer = new ArrayList<>();
		for (String r : record) {
			tokenizer = new StringTokenizer(r, " ");
			cmd = tokenizer.nextToken();
			if(!cmd.equals("Change")) {				
				id = tokenizer.nextToken();
				answer.add(new StringBuilder()
								.append(idMap.get(id))
								.append("Enter".equals(cmd) ? "님이 들어왔습니다." : "님이 나갔습니다.")
								.toString());
			}
		}
		return answer.toArray(new String[answer.size()]);
    }
}

3선언 / if not

테스트 1 〉	통과 (1.94ms, 51.9MB)
테스트 2 〉	통과 (1.99ms, 52.4MB)
테스트 3 〉	통과 (2.01ms, 52.6MB)
테스트 4 〉	통과 (2.73ms, 54.3MB)
테스트 5 〉	통과 (18.28ms, 54.6MB)
테스트 6 〉	통과 (16.01ms, 53.4MB)
테스트 7 〉	통과 (11.32ms, 55MB)
테스트 8 〉	통과 (12.33ms, 55.1MB)
테스트 9 〉	통과 (12.55ms, 53.5MB)
테스트 10 〉	통과 (12.03ms, 52.6MB)
테스트 11 〉	통과 (7.96ms, 52.3MB)
테스트 12 〉	통과 (8.19ms, 50.4MB)
테스트 13 〉	통과 (12.26ms, 55MB)
테스트 14 〉	통과 (14.58ms, 53.8MB)
테스트 15 〉	통과 (1.90ms, 52.5MB)
테스트 16 〉	통과 (2.04ms, 50.6MB)
테스트 17 〉	통과 (4.51ms, 52.7MB)
테스트 18 〉	통과 (3.02ms, 52.1MB)
테스트 19 〉	통과 (11.80ms, 55.2MB)
테스트 20 〉	통과 (18.76ms, 55MB)
테스트 21 〉	통과 (8.94ms, 53.1MB)
테스트 22 〉	통과 (10.62ms, 52.8MB)
테스트 23 〉	통과 (11.67ms, 55.2MB)
테스트 24 〉	통과 (13.91ms, 54.7MB)
테스트 25 〉	통과 (214.75ms, 148MB)
테스트 26 〉	통과 (209.23ms, 154MB)
테스트 27 〉	통과 (233.78ms, 170MB)
테스트 28 〉	통과 (258.24ms, 162MB)
테스트 29 〉	통과 (263.69ms, 167MB)
테스트 30 〉	통과 (227.19ms, 151MB)
테스트 31 〉	통과 (252.17ms, 161MB)
테스트 32 〉	통과 (221.52ms, 154MB)